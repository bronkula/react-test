{"version":3,"sources":["parts/header.js","pages/index.js","parts/numbers.js","parts/paginator.js","parts/clicklist.js","pages/learn.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","console","log","className","title","children","map","o","i","key","MainPage","href","NumberItem","data","NumberList","Paginator","next","prev","to","NextPrev","p","page","useRouteMatch","path","split","slice","ClickList","callback","delimiter","onClick","first","reduce","r","LearnIntroPage","class","target","rel","Learn1Page","arr","Learn2Page","fonts","setFont","type","value","onChange","e","preventDefault","onSubmit","style","fontFamily","Learn3Page","second","Learn4Page","LearnPage","useReducer","s","a","exact","App","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b54e618b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = (props) => {\r\n    console.log(props)\r\n    return (\r\n    <header className=\"navbar\">\r\n        <div className=\"container flex-parent\">\r\n            <div className=\"flex-child\">\r\n                <h1>{props.title}</h1>\r\n            </div>\r\n            <nav className=\"nav flex-none\">\r\n                <ul>{\r\n                    props.children.map((o,i)=>(\r\n                        <li key={i}>{o}</li>\r\n                    ))\r\n                }</ul>\r\n            </nav>\r\n        </div>\r\n    </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst MainPage = () => {\r\n\treturn (\r\n\t\t<div className=\"card pad\">\r\n\t\t\t<h2>Intro to React Apps</h2>\r\n\t\t\t<p>This page will be a short introduction to some basic, and even advanced topics for creating a React App from scratch. Open the code and step through the application part by part, as you analyse the inner workings.</p>\r\n\r\n\t\t\t<h3>Relevant Links</h3>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Add React to a Page: <a href=\"https://reactjs.org/docs/add-react-to-a-website.html\">https://reactjs.org/docs/add-react-to-a-website.html</a></li>\r\n\t\t\t\t<li>Hooks: <a href=\"https://reactjs.org/docs/hooks-reference.html\">https://reactjs.org/docs/hooks-reference.html</a></li>\r\n\t\t\t\t<li>Hooks Examples: <a href=\"https://daveceddia.com/useeffect-hook-examples/\">https://daveceddia.com/useeffect-hook-examples/</a></li>\r\n\t\t\t\t<li>React Router: <a href=\"https://reacttraining.com/react-router/web/guides/quick-start\">https://reacttraining.com/react-router/web/guides/quick-start</a></li>\r\n\t\t\t\t<li>Deployment: <a href=\"https://create-react-app.dev/docs/deployment/#serving-apps-with-client-side-routing\">https://create-react-app.dev/docs/deployment/#serving-apps-with-client-side-routing</a></li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default MainPage;","import React from 'react';\r\n\r\n\r\nconst NumberList = ({data}) => {\r\n\treturn (<ul>\r\n\t\t{data.map((o,i)=>\r\n\t\t\t<NumberItem key={i} data={o} />\r\n\t\t)}\r\n\t</ul>);\r\n}\r\n\r\nconst NumberItem = ({data}) => {\r\n\treturn (<li>{data}</li>);\r\n}\r\n\r\nexport default NumberList;","import React from 'react';\r\n\r\nimport {\r\n\tLink,\r\n\tuseRouteMatch\r\n} from 'react-router-dom';\r\n\r\nconst Paginator = ({next,prev}) => {\r\n\treturn (<div className=\"flex-parent\">\r\n\t\t<div className=\"flex-none\"><Link className=\"btn\" to={prev[1]}>{prev[0]}</Link></div>\r\n        <div className=\"flex-child\">&nbsp;</div>\r\n\t\t<div className=\"flex-none\"><Link className=\"btn\" to={next[1]}>{next[0]}</Link></div>\r\n\t</div>)\r\n}\r\n\r\nconst NextPrev = (p) => {\r\n\tlet page = +useRouteMatch().path.split('/').slice(-1)[0];\r\n    return (<Paginator prev={['Prev',p.path+'/'+(page-1||'')]} next={['Next',p.path+'/'+(page+1)]} />);\r\n}\r\n\r\nexport {Paginator,NextPrev};","import React from 'react';\r\n\r\nconst ClickList = ({data,callback,delimiter}) => {\r\n    return data\r\n        .map(o=>(\r\n            <span onClick={()=>callback({first:o})}>{o}</span>\r\n        )).reduce((r,o)=>[r,delimiter,o])\r\n}\r\n\r\nexport default ClickList;","import React, {useReducer} from 'react';\r\n\r\nimport {\r\n\tSwitch,\r\n\tRoute,\r\n\tLink,\r\n\tuseRouteMatch\r\n} from 'react-router-dom';\r\n\r\nimport NumberList from '../parts/numbers';\r\nimport {Paginator,NextPrev} from '../parts/paginator';\r\nimport ClickList from '../parts/clicklist';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst LearnPage = () => {\r\n\tlet {path} = useRouteMatch();\r\n\r\n\t// A reducer is a handy way of creating app data that is subscribed but somewhat custom\r\n\t// These will reset if you ever navigate away from the Learn pages\r\n\tlet [fonts,setFont] = useReducer(\r\n\t\t(s,a) => ({...s,...a}),\r\n\t\t{first:'Arial',second:'serif'}\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t<Route exact path={path}>\r\n\t\t\t\t<LearnIntroPage path={path}/>\r\n\t\t\t</Route>\r\n\t\t\t<Route exact path={`${path}/1`}>\r\n\t\t\t\t<Learn1Page path={path}/>\r\n\t\t\t</Route>\r\n\t\t\t<Route exact path={`${path}/2`}>\r\n\t\t\t\t<Learn2Page path={path} fonts={fonts} setFont={setFont} />\r\n\t\t\t</Route>\r\n\t\t\t<Route exact path={`${path}/3`}>\r\n\t\t\t\t<Learn3Page path={path} fonts={fonts} setFont={setFont} />\r\n\t\t\t</Route>\r\n\t\t\t<Route exact path={`${path}/4`}>\r\n\t\t\t\t<Learn4Page path={path} fonts={fonts} />\r\n\t\t\t</Route>\r\n\t\t</Switch>\r\n\t);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst LearnIntroPage = (props) => {\r\n\treturn (<div class=\"card\">\r\n\t\t<div class=\"pad\">\r\n\t\t\t<h3>Learn about react stuff.</h3>\r\n\t\r\n\t\t\t<p>I should probably mention this page is only useful if you also look at the <a href=\"https://github.com/bronkula/react-test\" target=\"_blank\" rel=\"noopener noreferrer\">github source repository</a>. The build will just seem silly by itself.</p>\r\n\t\t</div>\r\n\r\n\r\n\t\t<div class=\"pad line-up\">\r\n\t\t\t<div className=\"flex-parent\">\r\n\t\t\t\t<div className=\"flex-child\"/>\r\n\t\t\t\t<Link className=\"btn\" to={`${props.path}/1`}>Start!</Link>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>);\r\n}\r\n\r\n\r\nconst Learn1Page = ({path}) => {\r\n\tlet arr = ['Red','Blue','Green','Cyan','Magenta','Yellow'];\r\n\treturn (\r\n\t\t<div class=\"card\">\r\n\t\t\t<div class=\"pad\">\r\n\t\t\t\t<h3>Lists</h3>\r\n\t\r\n\t\t\t\t<hr/>\r\n\t\t\t\t<div>Inline List</div>\r\n\t\t\t\t{arr.map((o,i)=>\r\n\t\t\t\t\t<div key={i}>{o}</div>\r\n\t\t\t\t)}\r\n\t\r\n\t\t\t\t<hr/>\r\n\t\t\t\t<div>Component List</div>\r\n\t\t\t\t<NumberList data={arr} />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"pad line-up\">\r\n\t\t\t\t<NextPrev path={path} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nconst Learn2Page = ({path,fonts,setFont}) => {\r\n\r\n\tlet fontlist = ['Arial', 'Arial Black', 'Tahoma', 'Verdana', 'sans-serif'];\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t}\r\n\r\n\tconst handleChange = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetFont({first:e.target.value});\r\n\t}\r\n\r\n\tconst handleInput = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetFont({first:e.target.value});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div class=\"card\">\r\n\t\t\t<div class=\"pad\">\r\n\t\t\t\t<h3>React forms</h3>\r\n\t\r\n\t\t\t\t<div>Choose a sans-serif font. Such as:\r\n\t\t\t\t\t<ClickList data={fontlist} callback={setFont} delimiter=\", \" />\r\n\t\t\t\t</div>\r\n\t\r\n\t\t\t\t<hr/>\r\n\t\t\t\t<div>This input will update all values instantly.</div>\r\n\t\t\t\t<input type=\"text\" value={fonts.first} onChange={handleInput} />\r\n\t\r\n\t\t\t\t<hr/>\r\n\t\t\t\t<div>Don't try to change values <em>on submit</em> of <em>controlled inputs</em>.</div>\r\n\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<input type=\"text\" value={fonts.first} onChange={handleChange} />\r\n\t\t\t\t</form>\r\n\t\r\n\t\t\t\t<hr/>\r\n\t\t\t\t<div style={{fontFamily:fonts.first}}>The chosen font is {fonts.first}.</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div class=\"pad line-up\">\r\n\t\t\t\t<NextPrev path={path} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst Learn3Page = ({path,fonts,setFont}) => {\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetFont({second:e.target.value});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div class=\"card\">\r\n\t\t\t<div class=\"pad\">\r\n\t\t\t\t<h3>Select Pulldowns</h3>\r\n\t\r\n\t\t\t\t<hr/>\r\n\t\t\t\t<select value={fonts.second} onChange={handleChange}>\r\n\t\t\t\t\t<option value=\"times new roman\">Times New Roman</option>\r\n\t\t\t\t\t<option value=\"cambria\">Cambria</option>\r\n\t\t\t\t\t<option value=\"georgia\">Georgia</option>\r\n\t\t\t\t\t<option value=\"serif\">Serif</option>\r\n\t\t\t\t</select>\r\n\t\r\n\t\t\t\t<div style={{fontFamily:fonts.second}}>The chosen font is {fonts.second}.</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div class=\"pad line-up\">\r\n\t\t\t\t<NextPrev path={path} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst Learn4Page = ({path,fonts}) => {\r\n\r\n\treturn (\r\n\t\t<div class=\"card\">\r\n\t\t\t<div class=\"pad\">\r\n\t\t\t\t<h3>Now you can see your chosen fonts.</h3>\r\n\t\r\n\t\t\t\t<div style={{fontFamily:fonts.first}}>The first chosen font is {fonts.first}.</div>\r\n\t\t\t\t<div style={{fontFamily:fonts.second}}>The second chosen font is {fonts.second}.</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div class=\"pad line-up\">\r\n\t\t\t\t<Paginator prev={['Start Over',`${path}/2`]} next={['Finish','/']} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default LearnPage;","import React from 'react';\nimport './App.css';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\n\nimport Header from \"./parts/header\";\nimport MainPage from \"./pages\";\nimport LearnPage from \"./pages/learn\";\n\nfunction App() {\n   return (\n      <Router>\n         <Header title=\"Learning React\">\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/learn\">Learn React</Link>\n         </Header>\n\n         <div className=\"container\">\n            <Switch>\n               <Route exact path=\"/\" component={MainPage} />\n               <Route path=\"/learn\" component={LearnPage} />\n            </Switch>\n         </div>\n      </Router>\n   );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}